from pptx import Presentation
from pptx.util import Inches, Pt
from pptx.enum.text import PP_ALIGN, MSO_ANCHOR
from pptx.dml.color import RGBColor
from pptx.enum.shapes import MSO_SHAPE
from pptx.enum.dml import MSO_THEME_COLOR
import os

def create_enhanced_shop_hub_presentation():
    # Create presentation
    prs = Presentation()
    
    # Define slide layouts
    title_slide_layout = prs.slide_layouts[0]  # Title slide
    content_slide_layout = prs.slide_layouts[1]  # Title and content
    section_header_layout = prs.slide_layouts[2]  # Section header
    blank_layout = prs.slide_layouts[6]  # Blank slide for custom layouts
    
    # Define custom colors
    primary_color = RGBColor(59, 130, 246)  # Blue
    secondary_color = RGBColor(16, 185, 129)  # Green
    accent_color = RGBColor(245, 158, 11)  # Orange
    dark_color = RGBColor(31, 41, 55)  # Dark gray
    light_color = RGBColor(249, 250, 251)  # Light gray
    
    # Slide 1: Enhanced Title Slide
    slide = prs.slides.add_slide(title_slide_layout)
    title = slide.shapes.title
    subtitle = slide.placeholders[1]
    
    title.text = "Shop Hub"
    subtitle.text = "Modern E-Commerce Platform\nInternship Project Report"
    
    # Apply styling to title
    title_frame = title.text_frame
    title_frame.paragraphs[0].font.size = Pt(44)
    title_frame.paragraphs[0].font.color.rgb = primary_color
    title_frame.paragraphs[0].font.bold = True
    
    # Apply styling to subtitle
    subtitle_frame = subtitle.text_frame
    subtitle_frame.paragraphs[0].font.size = Pt(24)
    subtitle_frame.paragraphs[0].font.color.rgb = dark_color
    subtitle_frame.paragraphs[1].font.size = Pt(18)
    subtitle_frame.paragraphs[1].font.color.rgb = secondary_color
    
    # Add additional info
    p = subtitle_frame.add_paragraph()
    p.text = "Technology Stack: React, TypeScript, Vite, Tailwind CSS, Shadcn/ui"
    p.font.size = Pt(14)
    p.font.color.rgb = dark_color
    
    p = subtitle_frame.add_paragraph()
    p.text = "Project Duration: 15th May to 10th July"
    p.font.size = Pt(14)
    p.font.color.rgb = dark_color
    
    p = subtitle_frame.add_paragraph()
    p.text = "Supervisor: Mr Yash | Date: 10th July, 2025"
    p.font.size = Pt(12)
    p.font.color.rgb = dark_color
    
    # Slide 2: Project Overview with enhanced styling
    slide = prs.slides.add_slide(content_slide_layout)
    title = slide.shapes.title
    content = slide.placeholders[1]
    
    title.text = "Project Overview"
    content_text = """üè™ Modern E-Commerce Web Application

‚Ä¢ Built using React 18 and TypeScript
‚Ä¢ Comprehensive online shopping experience
‚Ä¢ Features: user authentication, product browsing, shopping cart, secure checkout

üéØ Key Objectives:
‚Ä¢ Develop user-friendly e-commerce platform with modern UI/UX
‚Ä¢ Implement secure user authentication and session management
‚Ä¢ Create intuitive product browsing and search experience
‚Ä¢ Build robust shopping cart system with quantity management
‚Ä¢ Ensure responsive design for all device types"""
    
    content.text = content_text
    
    # Apply styling
    title_frame = title.text_frame
    title_frame.paragraphs[0].font.size = Pt(36)
    title_frame.paragraphs[0].font.color.rgb = primary_color
    title_frame.paragraphs[0].font.bold = True
    
    # Slide 3: Key Features with icons
    slide = prs.slides.add_slide(content_slide_layout)
    title = slide.shapes.title
    content = slide.placeholders[1]
    
    title.text = "Key Features"
    content_text = """üîê User Authentication
‚Ä¢ Secure login/signup with validation
‚Ä¢ Session management across browser sessions

üõçÔ∏è Product Catalog
‚Ä¢ Browse products by categories
‚Ä¢ Search functionality
‚Ä¢ Detailed product information with image galleries

üõí Shopping Cart
‚Ä¢ Add, remove, and update product quantities
‚Ä¢ Real-time cart updates
‚Ä¢ Persistent cart data

üì± Responsive Design
‚Ä¢ Mobile-first approach
‚Ä¢ Modern UI with consistent design language
‚Ä¢ Real-time validation with immediate feedback"""
    
    content.text = content_text
    
    # Apply styling
    title_frame = title.text_frame
    title_frame.paragraphs[0].font.size = Pt(36)
    title_frame.paragraphs[0].font.color.rgb = primary_color
    title_frame.paragraphs[0].font.bold = True
    
    # Slide 4: Technology Stack with visual elements
    slide = prs.slides.add_slide(content_slide_layout)
    title = slide.shapes.title
    content = slide.placeholders[1]
    
    title.text = "Technology Stack"
    content_text = """‚öõÔ∏è Frontend Framework: React 18 with TypeScript
‚ö° Build Tool: Vite for fast development and building
üé® Styling: Tailwind CSS with Shadcn/ui components
üîÑ State Management: React Context API
üõ£Ô∏è Routing: React Router DOM
üéØ Icons: Lucide React
‚úÖ Validation: Custom validation utilities

üí° Benefits:
‚Ä¢ Type safety with TypeScript
‚Ä¢ Fast development with Vite
‚Ä¢ Modern UI components with Shadcn/ui
‚Ä¢ Efficient state management"""
    
    content.text = content_text
    
    # Apply styling
    title_frame = title.text_frame
    title_frame.paragraphs[0].font.size = Pt(36)
    title_frame.paragraphs[0].font.color.rgb = primary_color
    title_frame.paragraphs[0].font.bold = True
    
    # Slide 5: Application Screenshots - Login Page
    slide = prs.slides.add_slide(blank_layout)
    
    # Add title
    title_box = slide.shapes.add_textbox(Inches(1), Inches(0.5), Inches(8), Inches(1))
    title_frame = title_box.text_frame
    title_frame.text = "Application Screenshots - Login Page"
    title_frame.paragraphs[0].font.size = Pt(28)
    title_frame.paragraphs[0].font.color.rgb = primary_color
    title_frame.paragraphs[0].font.bold = True
    title_frame.paragraphs[0].alignment = PP_ALIGN.CENTER
    
    # Add placeholder for login screenshot
    img_box = slide.shapes.add_textbox(Inches(1), Inches(2), Inches(8), Inches(5))
    img_frame = img_box.text_frame
    img_frame.text = "[Login Page Screenshot]\n\nSecure user authentication with\nemail validation and password strength indicator"
    img_frame.paragraphs[0].font.size = Pt(18)
    img_frame.paragraphs[0].font.color.rgb = dark_color
    img_frame.paragraphs[0].alignment = PP_ALIGN.CENTER
    img_frame.paragraphs[1].font.size = Pt(14)
    img_frame.paragraphs[1].font.color.rgb = secondary_color
    img_frame.paragraphs[1].alignment = PP_ALIGN.CENTER
    
    # Slide 6: Application Screenshots - Homepage
    slide = prs.slides.add_slide(blank_layout)
    
    # Add title
    title_box = slide.shapes.add_textbox(Inches(1), Inches(0.5), Inches(8), Inches(1))
    title_frame = title_box.text_frame
    title_frame.text = "Application Screenshots - Homepage"
    title_frame.paragraphs[0].font.size = Pt(28)
    title_frame.paragraphs[0].font.color.rgb = primary_color
    title_frame.paragraphs[0].font.bold = True
    title_frame.paragraphs[0].alignment = PP_ALIGN.CENTER
    
    # Add placeholder for homepage screenshot
    img_box = slide.shapes.add_textbox(Inches(1), Inches(2), Inches(8), Inches(5))
    img_frame = img_box.text_frame
    img_frame.text = "[Homepage Screenshot]\n\nModern responsive design with\nfeatured products and category navigation"
    img_frame.paragraphs[0].font.size = Pt(18)
    img_frame.paragraphs[0].font.color.rgb = dark_color
    img_frame.paragraphs[0].alignment = PP_ALIGN.CENTER
    img_frame.paragraphs[1].font.size = Pt(14)
    img_frame.paragraphs[1].font.color.rgb = secondary_color
    img_frame.paragraphs[1].alignment = PP_ALIGN.CENTER
    
    # Slide 7: Application Screenshots - Product Page
    slide = prs.slides.add_slide(blank_layout)
    
    # Add title
    title_box = slide.shapes.add_textbox(Inches(1), Inches(0.5), Inches(8), Inches(1))
    title_frame = title_box.text_frame
    title_frame.text = "Application Screenshots - Product Page"
    title_frame.paragraphs[0].font.size = Pt(28)
    title_frame.paragraphs[0].font.color.rgb = primary_color
    title_frame.paragraphs[0].font.bold = True
    title_frame.paragraphs[0].alignment = PP_ALIGN.CENTER
    
    # Add placeholder for product page screenshot
    img_box = slide.shapes.add_textbox(Inches(1), Inches(2), Inches(8), Inches(5))
    img_frame = img_box.text_frame
    img_frame.text = "[Product Page Screenshot]\n\nDetailed product information with\nimage gallery and add to cart functionality"
    img_frame.paragraphs[0].font.size = Pt(18)
    img_frame.paragraphs[0].font.color.rgb = dark_color
    img_frame.paragraphs[0].alignment = PP_ALIGN.CENTER
    img_frame.paragraphs[1].font.size = Pt(14)
    img_frame.paragraphs[1].font.color.rgb = secondary_color
    img_frame.paragraphs[1].alignment = PP_ALIGN.CENTER
    
    # Slide 8: Application Screenshots - Cart Page
    slide = prs.slides.add_slide(blank_layout)
    
    # Add title
    title_box = slide.shapes.add_textbox(Inches(1), Inches(0.5), Inches(8), Inches(1))
    title_frame = title_box.text_frame
    title_frame.text = "Application Screenshots - Cart Page"
    title_frame.paragraphs[0].font.size = Pt(28)
    title_frame.paragraphs[0].font.color.rgb = primary_color
    title_frame.paragraphs[0].font.bold = True
    title_frame.paragraphs[0].alignment = PP_ALIGN.CENTER
    
    # Add placeholder for cart page screenshot
    img_box = slide.shapes.add_textbox(Inches(1), Inches(2), Inches(8), Inches(5))
    img_frame = img_box.text_frame
    img_frame.text = "[Cart Page Screenshot]\n\nShopping cart with quantity management\nand persistent cart data"
    img_frame.paragraphs[0].font.size = Pt(18)
    img_frame.paragraphs[0].font.color.rgb = dark_color
    img_frame.paragraphs[0].alignment = PP_ALIGN.CENTER
    img_frame.paragraphs[1].font.size = Pt(14)
    img_frame.paragraphs[1].font.color.rgb = secondary_color
    img_frame.paragraphs[1].alignment = PP_ALIGN.CENTER
    
    # Slide 9: System Architecture Diagram
    slide = prs.slides.add_slide(blank_layout)
    
    # Add title
    title_box = slide.shapes.add_textbox(Inches(1), Inches(0.5), Inches(8), Inches(1))
    title_frame = title_box.text_frame
    title_frame.text = "System Architecture"
    title_frame.paragraphs[0].font.size = Pt(28)
    title_frame.paragraphs[0].font.color.rgb = primary_color
    title_frame.paragraphs[0].font.bold = True
    title_frame.paragraphs[0].alignment = PP_ALIGN.CENTER
    
    # Add architecture diagram placeholder
    arch_box = slide.shapes.add_textbox(Inches(1), Inches(2), Inches(8), Inches(5))
    arch_frame = arch_box.text_frame
    arch_frame.text = "[System Architecture Diagram]\n\nComponent-Based Architecture:\n\nüì± Presentation Layer (React Components)\n‚öôÔ∏è Business Logic Layer (Custom Hooks)\nüîÑ State Management Layer (Context API)\nüíæ Data Layer (Static Data + localStorage)"
    arch_frame.paragraphs[0].font.size = Pt(18)
    arch_frame.paragraphs[0].font.color.rgb = dark_color
    arch_frame.paragraphs[0].alignment = PP_ALIGN.CENTER
    arch_frame.paragraphs[2].font.size = Pt(14)
    arch_frame.paragraphs[2].font.color.rgb = secondary_color
    arch_frame.paragraphs[2].alignment = PP_ALIGN.CENTER
    
    # Slide 10: Functional Requirements
    slide = prs.slides.add_slide(content_slide_layout)
    title = slide.shapes.title
    content = slide.placeholders[1]
    
    title.text = "Functional Requirements"
    content_text = """üë§ User Management
‚Ä¢ User registration with email, name, and password
‚Ä¢ User login/logout functionality
‚Ä¢ Session persistence across browser sessions
‚Ä¢ Authentication required for cart operations

üì¶ Product Management
‚Ä¢ Browse all available products
‚Ä¢ Filter products by category
‚Ä¢ Search products by name
‚Ä¢ View detailed product information

üõí Shopping Cart
‚Ä¢ Add products to cart (authenticated users)
‚Ä¢ View cart contents and total
‚Ä¢ Update product quantities
‚Ä¢ Remove products and clear entire cart
‚Ä¢ Cart persistence across sessions"""
    
    content.text = content_text
    
    # Apply styling
    title_frame = title.text_frame
    title_frame.paragraphs[0].font.size = Pt(36)
    title_frame.paragraphs[0].font.color.rgb = primary_color
    title_frame.paragraphs[0].font.bold = True
    
    # Slide 11: Non-Functional Requirements
    slide = prs.slides.add_slide(content_slide_layout)
    title = slide.shapes.title
    content = slide.placeholders[1]
    
    title.text = "Non-Functional Requirements"
    content_text = """‚ö° Performance
‚Ä¢ Application loads within 3 seconds
‚Ä¢ Smooth animations and transitions (60fps)
‚Ä¢ Efficient state management with minimal re-renders

üîí Security
‚Ä¢ Secure password requirements (8+ chars, complexity)
‚Ä¢ Email format validation
‚Ä¢ Input sanitization and validation
‚Ä¢ Authentication required for sensitive operations

üé® Usability
‚Ä¢ Intuitive navigation and user flow
‚Ä¢ Consistent design language throughout
‚Ä¢ Accessible design with proper contrast
‚Ä¢ Mobile-first responsive design

üõ°Ô∏è Reliability
‚Ä¢ Graceful error handling and recovery
‚Ä¢ Data persistence across browser sessions
‚Ä¢ Consistent behavior across different browsers"""
    
    content.text = content_text
    
    # Apply styling
    title_frame = title.text_frame
    title_frame.paragraphs[0].font.size = Pt(36)
    title_frame.paragraphs[0].font.color.rgb = primary_color
    title_frame.paragraphs[0].font.bold = True
    
    # Slide 12: Development Methodology
    slide = prs.slides.add_slide(content_slide_layout)
    title = slide.shapes.title
    content = slide.placeholders[1]
    
    title.text = "Development Methodology"
    content_text = """üîÑ Agile Development Approach
‚Ä¢ Iterative development cycles
‚Ä¢ Focus on delivering working features incrementally

üìã Development Process:
1. Planning Phase
   ‚Ä¢ Requirements analysis
   ‚Ä¢ Technology selection
   ‚Ä¢ Architecture planning
   ‚Ä¢ Timeline planning

2. Design Phase
   ‚Ä¢ UI/UX design with wireframes
   ‚Ä¢ Component design
   ‚Ä¢ State management design
   ‚Ä¢ API design

3. Development Phase
   ‚Ä¢ Sprint planning
   ‚Ä¢ Component development
   ‚Ä¢ Integration
   ‚Ä¢ Continuous testing

4. Testing Phase
   ‚Ä¢ Unit testing
   ‚Ä¢ Integration testing
   ‚Ä¢ User acceptance testing
   ‚Ä¢ Performance testing"""
    
    content.text = content_text
    
    # Apply styling
    title_frame = title.text_frame
    title_frame.paragraphs[0].font.size = Pt(36)
    title_frame.paragraphs[0].font.color.rgb = primary_color
    title_frame.paragraphs[0].font.bold = True
    
    # Slide 13: Testing Strategy
    slide = prs.slides.add_slide(content_slide_layout)
    title = slide.shapes.title
    content = slide.placeholders[1]
    
    title.text = "Testing Strategy"
    content_text = """üß™ Comprehensive Testing Approach

Unit Testing:
‚Ä¢ Component functionality testing
‚Ä¢ Utility function testing
‚Ä¢ Custom hook testing

Integration Testing:
‚Ä¢ Component interaction testing
‚Ä¢ Context integration testing
‚Ä¢ Routing functionality testing

User Acceptance Testing:
‚Ä¢ Complete user journey testing
‚Ä¢ Cross-browser compatibility
‚Ä¢ Responsive functionality testing

üîç Test Cases:
‚Ä¢ Authentication: Valid/invalid login, registration, session persistence
‚Ä¢ Cart Functionality: Add, update, remove items, cart persistence
‚Ä¢ Product Browsing: Listing, filtering, search, details view
‚Ä¢ Validation: Email, password, name validation with real-time feedback

‚ö° Performance Testing:
‚Ä¢ Load time within 3 seconds
‚Ä¢ Smooth interactions and animations
‚Ä¢ Efficient memory management
‚Ä¢ Optimized JavaScript bundle"""
    
    content.text = content_text
    
    # Apply styling
    title_frame = title.text_frame
    title_frame.paragraphs[0].font.size = Pt(36)
    title_frame.paragraphs[0].font.color.rgb = primary_color
    title_frame.paragraphs[0].font.bold = True
    
    # Slide 14: Project Achievements
    slide = prs.slides.add_slide(content_slide_layout)
    title = slide.shapes.title
    content = slide.placeholders[1]
    
    title.text = "Project Achievements"
    content_text = """‚úÖ Complete E-commerce Functionality
‚Ä¢ Full product browsing, cart management, and user authentication
‚Ä¢ Modern technology stack with React 18, TypeScript, Vite, and Tailwind CSS
‚Ä¢ Responsive design with mobile-first approach

üé® Technical Highlights
‚Ä¢ Component-based architecture for modular and maintainable code
‚Ä¢ Full TypeScript implementation for type safety
‚Ä¢ Efficient state management using React Context API
‚Ä¢ Custom validation system with comprehensive error handling
‚Ä¢ Modern UI/UX with accessibility considerations

üíº Business Value
‚Ä¢ Intuitive and engaging shopping experience
‚Ä¢ Scalable architecture supporting future feature additions
‚Ä¢ Clean code structure for easy maintenance
‚Ä¢ Optimized performance for fast loading and smooth interactions
‚Ä¢ Secure user data handling and authentication"""
    
    content.text = content_text
    
    # Apply styling
    title_frame = title.text_frame
    title_frame.paragraphs[0].font.size = Pt(36)
    title_frame.paragraphs[0].font.color.rgb = primary_color
    title_frame.paragraphs[0].font.bold = True
    
    # Slide 15: Lessons Learned
    slide = prs.slides.add_slide(content_slide_layout)
    title = slide.shapes.title
    content = slide.placeholders[1]
    
    title.text = "Lessons Learned"
    content_text = """üí° Technical Lessons

State Management:
‚Ä¢ Proper state management is crucial for complex applications
‚Ä¢ React Context API provides excellent state management for medium-sized applications

Component Design:
‚Ä¢ Reusable components significantly improve development efficiency
‚Ä¢ Component composition and prop drilling alternatives are essential

TypeScript Benefits:
‚Ä¢ TypeScript provides significant benefits in large projects
‚Ä¢ Type safety reduces bugs and improves development experience

Performance Optimization:
‚Ä¢ Performance considerations should be built into the development process
‚Ä¢ Efficient re-renders and state updates are crucial for smooth UX

üîÑ Development Process Lessons

Planning and Architecture:
‚Ä¢ Proper planning and architecture design saves significant development time
‚Ä¢ Component structure and data flow should be planned before implementation

Testing Strategy:
‚Ä¢ Testing should be integrated into the development process
‚Ä¢ Different types of testing are needed for different aspects of the application

User Experience:
‚Ä¢ User experience should be prioritized from the beginning
‚Ä¢ Small details like loading states and error handling significantly impact UX"""
    
    content.text = content_text
    
    # Apply styling
    title_frame = title.text_frame
    title_frame.paragraphs[0].font.size = Pt(36)
    title_frame.paragraphs[0].font.color.rgb = primary_color
    title_frame.paragraphs[0].font.bold = True
    
    # Slide 16: Future Improvements
    slide = prs.slides.add_slide(content_slide_layout)
    title = slide.shapes.title
    content = slide.placeholders[1]
    
    title.text = "Future Improvements"
    content_text = """üöÄ Technical Enhancements

Backend Integration:
‚Ä¢ Implement real backend API integration
‚Ä¢ Add proper database for product and user data
‚Ä¢ Implement secure payment processing

Advanced Features:
‚Ä¢ Advanced search and filtering capabilities
‚Ä¢ Product review and rating system
‚Ä¢ User wishlist functionality
‚Ä¢ Complete order processing system
‚Ä¢ Admin interface for product management

‚ö° Performance Optimizations

Code Splitting:
‚Ä¢ Implement lazy loading for better performance
‚Ä¢ Add proper caching strategies
‚Ä¢ Implement content delivery network
‚Ä¢ Convert to Progressive Web Application

üì± Additional Features:
‚Ä¢ User Reviews and Ratings
‚Ä¢ Wishlist Functionality
‚Ä¢ Order Management System
‚Ä¢ Admin Panel for Product Management
‚Ä¢ Advanced Analytics and Reporting"""
    
    content.text = content_text
    
    # Apply styling
    title_frame = title.text_frame
    title_frame.paragraphs[0].font.size = Pt(36)
    title_frame.paragraphs[0].font.color.rgb = primary_color
    title_frame.paragraphs[0].font.bold = True
    
    # Slide 17: Project Links and Demo
    slide = prs.slides.add_slide(blank_layout)
    
    # Add title
    title_box = slide.shapes.add_textbox(Inches(1), Inches(0.5), Inches(8), Inches(1))
    title_frame = title_box.text_frame
    title_frame.text = "Project Links & Demo"
    title_frame.paragraphs[0].font.size = Pt(28)
    title_frame.paragraphs[0].font.color.rgb = primary_color
    title_frame.paragraphs[0].font.bold = True
    title_frame.paragraphs[0].alignment = PP_ALIGN.CENTER
    
    # Add project links
    links_box = slide.shapes.add_textbox(Inches(1), Inches(2), Inches(8), Inches(5))
    links_frame = links_box.text_frame
    links_frame.text = "üîó GitHub Repository\nhttps://github.com/vedant208purohit/shop-hub-208.git\n\nüåê Live Demo\n[Available upon request]\n\nüë§ Demo Credentials\nEmail: demo@example.com\nPassword: password\n\nüì± Features Demo\n‚Ä¢ User Authentication: Complete login/signup flow\n‚Ä¢ Product Browsing: Category filtering and search\n‚Ä¢ Shopping Cart: Add, update, and remove items\n‚Ä¢ Responsive Design: Mobile and desktop experience\n‚Ä¢ Form Validation: Real-time validation feedback"
    links_frame.paragraphs[0].font.size = Pt(18)
    links_frame.paragraphs[0].font.color.rgb = primary_color
    links_frame.paragraphs[0].font.bold = True
    links_frame.paragraphs[0].alignment = PP_ALIGN.CENTER
    links_frame.paragraphs[1].font.size = Pt(12)
    links_frame.paragraphs[1].font.color.rgb = secondary_color
    links_frame.paragraphs[1].alignment = PP_ALIGN.CENTER
    
    # Slide 18: Conclusion
    slide = prs.slides.add_slide(content_slide_layout)
    title = slide.shapes.title
    content = slide.placeholders[1]
    
    title.text = "Conclusion"
    content_text = """üéØ Project Success

The Shop Hub e-commerce application successfully demonstrates:
‚Ä¢ Modern web development practices
‚Ä¢ Solid foundation for production-ready e-commerce platform
‚Ä¢ Importance of proper planning and architecture design
‚Ä¢ User experience considerations in web application development

üìö Key Takeaways

‚Ä¢ Lessons learned will be valuable for future development projects
‚Ä¢ Insights into building scalable, maintainable, and user-friendly web applications
‚Ä¢ Understanding of modern React development patterns
‚Ä¢ Experience with TypeScript and modern build tools

üåü Thank You!

Questions & Discussion"""
    
    content.text = content_text
    
    # Apply styling
    title_frame = title.text_frame
    title_frame.paragraphs[0].font.size = Pt(36)
    title_frame.paragraphs[0].font.color.rgb = primary_color
    title_frame.paragraphs[0].font.bold = True
    
    # Save the presentation
    prs.save('Shop_Hub_Enhanced_Presentation.pptx')
    print("Enhanced PowerPoint presentation created successfully: Shop_Hub_Enhanced_Presentation.pptx")

if __name__ == "__main__":
    create_enhanced_shop_hub_presentation() 